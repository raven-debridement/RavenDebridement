<!--
Configurable launch file to start Prosilicas Bruce and Catwoman

You can uncomment the viewer at bottom if you want to view the image stream.
-->

<launch>

  <node pkg="tf" type="static_transform_publisher" name="BC_L2R" args="0.103322 0 -0.00136 0 -0.104719755 0 left_BC right_BC 100" />
  <node pkg="tf" type="static_transform_publisher" name="world_left_BC" args="-0.032 -0.289 0.255 -1.483 0.012 -2.071 world left_BC 100" />
  <arg name="left_ip_address" default="" /> 
  <arg name="right_ip_address" default="" /> 

  <!-- Namespace to publish in -->
  <arg name="left_camera" default="left" />
  <arg name="right_camera" default="right" />
  <arg name="namespace" default="BC" />

  <!-- You can select the camera to open by its GUID or IP address. In some cases
       if the camera is connected through a switch (not visible to ListCameras),
       it may only be possible to open a camera by its fixed IP address.
       
       For help configuring your camera or determining its IP address, see
       http://www.ros.org/wiki/prosilica_camera/Tutorials.
       
       By default, when neither argument is set, open the first camera found.
       If both are set, open by IP address and verify the GUID matches.
  -->
  <arg name="left_guid" default="139217" />
  <!-- tf frame id associated with this camera -->
  <arg name="left_frame_id" default="left_BC" />

  <arg name="right_guid" default="143047" />
  <!-- tf frame id associated with this camera -->
  <arg name="right_frame_id" default="left_BC" />

  <!-- Trigger mode: 'streaming' or 'polled' -->
  <arg name="left_trigger_mode" default="streaming" />
  <arg name="right_trigger_mode" default="syncin2" />
  

  <!-- The left camera node -->
  <node name="$(arg left_camera)_driver" ns="$(arg namespace)" pkg="prosilica_camera" type="prosilica_node" output="screen">
    <remap from="camera" to="$(arg left_camera)" />

    <param name="guid" type="str" value="$(arg left_guid)" />
    <param name="ip_address" type="str" value="$(arg left_ip_address)" />
    <param name="left_trigger_mode" value="$(arg left_trigger_mode)" />
    <param name="frame_id" value="$(arg left_frame_id)" />
    <param name="auto_exposure" value="False" />
    <param name="auto_gain" value="False" />
    <param name="auto_whitebalance" value="True" />
  </node>

  <!-- The right camera node -->
  <node name="$(arg right_camera)_driver" ns="$(arg namespace)" pkg="prosilica_camera" type="prosilica_node" output="screen">
    <remap from="camera" to="$(arg right_camera)" />

    <param name="guid" type="str" value="$(arg right_guid)" />
    <param name="ip_address" type="str" value="$(arg right_ip_address)" />
    <param name="right_trigger_mode" value="$(arg right_trigger_mode)" />
    <param name="frame_id" value="$(arg right_frame_id)" />
    <param name="auto_exposure" value="False" />
    <param name="auto_gain" value="False" />
    <param name="auto_whitebalance" value="True" />
  </node>

  <node ns="BC" pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc">
    <param name="approximate_sync" type="bool" value="true" />
    <param name="queue_size" type="int" value="20" />
    <param name="min_disparity" type="int" value="128" />
    <param name="disparity_range" type="int" value="128" />
  </node>








  <!--<node pkg="tf" type="static_transform_publisher" name="left_BC_to_world" args="-0.019 -0.226 0.288 -1.651 -0.017 -2.042 world left_BC 100" />-->


  <!-- If running in polled mode, change ns to match your service call argument. -->
  <!--<group ns="$(arg camera)">-->

      <!--
      Uncomment below if you want to view the image stream on a monochrome
      camera. (You will see the Bayer coded image on a color camera)

      You will have to run the following command first:
      $ rosmake image_view
      -->

    <!--
    <node pkg="image_view" type="image_view" respawn="false" name="prosilica_viewer_mono">
      <param name="autosize" type="bool" value="False" />
      <param name="window_name" type="str" value="'Prosilica Camera (Mono)'" />
      <remap from="image" to="image_raw" />
    </node>
    -->

      <!--
      Uncomment below if you want to view the image stream on a color camera.

      You will have to run the following command first:
      $ rosmake image_view image_proc
      -->

    <!--
    <node pkg="image_proc" type="image_proc" respawn="false" name="prosilica_image_proc" />
    <node pkg="image_view" type="image_view" respawn="false" name="prosilica_viewer_color">
      <param name="autosize" type="bool" value="False" />
      <param name="window_name" type="str" value="'Prosilica Camera (Color)'" />
      <remap from="image" to="image_color" />
    </node>
    -->

  <!--</group>-->

</launch>
